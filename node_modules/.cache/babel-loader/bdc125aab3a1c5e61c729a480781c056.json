{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cfedd\\\\Documents\\\\code\\\\pomodoro\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nfunction ProgressBar(props) {\n  const {\n    mode,\n    timeRemaining,\n    breakDuration,\n    focusDuration,\n    minutesToDuration,\n    isSessionActive\n  } = props;\n  let progress = \"\";\n\n  if (mode !== \"focus\") {\n    progress = (1 - timeRemaining / (breakDuration * 60)) * 100;\n  } else if (mode === \"focus\") {\n    progress = (1 - timeRemaining / (focusDuration * 60)) * 100;\n  } else {\n    progress = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isSessionActive ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progress // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${progress}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/cfedd/Documents/code/pomodoro/src/pomodoro/ProgressBar.js"],"names":["React","secondsToDuration","minutesToDuration","ProgressBar","props","mode","timeRemaining","breakDuration","focusDuration","isSessionActive","progress","display","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA,aAAtC;AAAqDN,IAAAA,iBAArD;AAAwEO,IAAAA;AAAxE,MAA4FL,KAAlG;AAEA,MAAIM,QAAQ,GAAG,EAAf;;AACA,MAAIL,IAAI,KAAK,OAAb,EAAsB;AACpBK,IAAAA,QAAQ,GAAG,CAAC,IAAIJ,aAAa,IAAIC,aAAa,GAAG,EAApB,CAAlB,IAA6C,GAAxD;AACD,GAFD,MAEO,IAAIF,IAAI,KAAK,OAAb,EAAsB;AAC3BK,IAAAA,QAAQ,GAAG,CAAC,IAAIJ,aAAa,IAAIE,aAAa,GAAG,EAApB,CAAlB,IAA6C,GAAxD;AACD,GAFM,MAEA;AACLE,IAAAA,QAAQ,GAAG,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEF,eAAe,GAAG,OAAH,GAAa;AAAvC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeF,QALjB,CAK2B;AAL3B;AAME,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAG,GAAEH,QAAS;AAArB,KANT,CAMoC;AANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAkBD;;AAED,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction ProgressBar(props) {\r\n  const { mode, timeRemaining, breakDuration, focusDuration, minutesToDuration, isSessionActive } = props;\r\n\r\n  let progress = \"\";\r\n  if (mode !== \"focus\") {\r\n    progress = (1 - timeRemaining / (breakDuration * 60)) * 100;\r\n  } else if (mode === \"focus\") {\r\n    progress = (1 - timeRemaining / (focusDuration * 60)) * 100;\r\n  } else {\r\n    progress = 0;\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: isSessionActive ? \"block\" : \"none\" }}>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width: `${progress}%` }} // TODO: Increase width % as elapsed time increases\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}