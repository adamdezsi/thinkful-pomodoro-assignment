{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cfedd\\\\Documents\\\\code\\\\pomodoro\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState, setState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport Controller from \"./Controller\";\nimport ProgressBar from \"./ProgressBar\";\nimport TimeMachine from \"./TimeMachine\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(focusDuration * 60);\n  const [mode, setMode] = useState(\"focus\");\n  useInterval(() => {\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n\n      if (mode === \"focus\") {\n        setMode(\"break\");\n        setTimeRemaining(breakDuration * 60);\n        return;\n      } else {\n        setMode(\"focus\");\n        setTimeRemaining(focusDuration * 60);\n        return;\n      }\n    }\n\n    setTimeRemaining(prevTime => prevTime - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stop() {\n    setIsTimerRunning(false);\n\n    if (mode === \"focus\") {\n      setTimeRemaining(focusDuration * 60);\n    } else {\n      setTimeRemaining(breakDuration * 60);\n    }\n\n    setMode(\"focus\");\n  }\n\n  const decreaseFocus = () => {\n    const newFocus = focusDuration - 5;\n    setFocusDuration(newFocus);\n    setTimeRemaining(newFocus * 60);\n  };\n\n  const increaseFocus = () => {\n    setFocusDuration(prevFocus => {\n      const newFocus = prevFocus + 5;\n      setTimeRemaining(newFocus * 60);\n      return newFocus;\n    });\n  };\n\n  const decreaseBreak = () => {\n    setBreakDuration(lastBreak => lastBreak - 1);\n  };\n\n  const increaseBreak = () => {\n    setBreakDuration(lastBreak => lastBreak + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TimeMachine, {\n    focusDuration: focusDuration,\n    minutesToDuration: minutesToDuration,\n    decreaseFocus: decreaseFocus,\n    isTimerRunning: isTimerRunning,\n    increaseFocus: increaseFocus,\n    breakDuration: breakDuration,\n    decreaseBreak: decreaseBreak,\n    increaseBreak: increaseBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    playPause: playPause,\n    isTimerRunning: isTimerRunning,\n    stop: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, mode === \"focus\" ? `Focusing for ${minutesToDuration(focusDuration)} minutes` : `On Break for ${minutesToDuration(breakDuration)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/cfedd/Documents/code/pomodoro/src/pomodoro/Pomodoro.js"],"names":["React","useState","setState","classNames","useInterval","secondsToDuration","minutesToDuration","Controller","ProgressBar","TimeMachine","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","Audio","play","prevTime","playPause","prevState","stop","decreaseFocus","newFocus","increaseFocus","prevFocus","decreaseBreak","lastBreak","increaseBreak","progress"],"mappings":"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","sourcesContent":["import React, { useState, setState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport Controller from \"./Controller\";\nimport ProgressBar from \"./ProgressBar\";\nimport TimeMachine from \"./TimeMachine\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(focusDuration * 60);\n  const [mode, setMode] = useState(\"focus\");\n\n  \n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        if (mode === \"focus\") {\n          setMode(\"break\");\n          setTimeRemaining(breakDuration * 60);\n\n          return;\n        } else {\n          setMode(\"focus\");\n          setTimeRemaining(focusDuration * 60);\n\n          return;\n        }\n      }\n      setTimeRemaining((prevTime) => prevTime - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stop() {\n    setIsTimerRunning(false);\n    if (mode === \"focus\") {\n      setTimeRemaining(focusDuration * 60);\n    } else {\n      setTimeRemaining(breakDuration * 60);\n    }\n    setMode(\"focus\");\n  }\n\n  const decreaseFocus = () => {\n    const newFocus = focusDuration - 5;\n    setFocusDuration(newFocus);\n    setTimeRemaining(newFocus * 60);\n  };\n\n  const increaseFocus = () => {\n    setFocusDuration((prevFocus) => {\n      const newFocus = prevFocus + 5;\n      setTimeRemaining(newFocus * 60);\n      return newFocus;\n    });\n  };\n\n  const decreaseBreak = () => {\n    setBreakDuration((lastBreak) => lastBreak - 1);\n  };\n\n  const increaseBreak = () => {\n    setBreakDuration((lastBreak) => lastBreak + 1);\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <TimeMachine\n        focusDuration={focusDuration}\n        minutesToDuration={minutesToDuration}\n        decreaseFocus={decreaseFocus}\n        isTimerRunning={isTimerRunning}\n        increaseFocus={increaseFocus}\n        breakDuration={breakDuration}\n        decreaseBreak={decreaseBreak}\n        increaseBreak={increaseBreak}\n      />\n      <div className=\"row\">\n        <div className=\"col\">\n          <Controller\n            playPause={playPause}\n            isTimerRunning={isTimerRunning}\n            stop={stop}\n          />\n        </div>\n      </div>\n      <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {mode === \"focus\"\n                ? `Focusing for ${minutesToDuration(focusDuration)} minutes`\n                : `On Break for ${minutesToDuration(breakDuration)} minutes`}\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <ProgressBar progress={progress} />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}